# src/shacnify/core/planner.py
from pathlib import Path
from rich.table import Table
from rich.console import Console

console = Console()

class Plan:
    def __init__(self, framework, safe_mode=False):
        self.framework = framework
        self.safe_mode = safe_mode
        self.actions = []
        self._generate()

    def _generate(self):
        """Ph√¢n t√≠ch d·ª± √°n v√† x√¢y d·ª±ng danh s√°ch c√°c h√†nh ƒë·ªông."""
        # K·∫ø ho·∫°ch cho c√°c file c·∫•u h√¨nh
        self._plan_config_files()
        
        # K·∫ø ho·∫°ch cho vi·ªác t√°i c·∫•u tr√∫c 'src'
        if not self.safe_mode:
            self._plan_src_restructure()

    def _plan_config_files(self):
        tailwind_config = Path("tailwind.config.js")
        if not tailwind_config.exists() or not self.safe_mode:
            action = "OVERWRITE" if tailwind_config.exists() else "CREATE"
            self.actions.append((action, "tailwind.config.js", "File c·∫•u h√¨nh Tailwind"))

        # T∆∞∆°ng t·ª± cho c√°c file kh√°c n·∫øu c·∫ßn...

    def _plan_src_restructure(self):
        # Li·ªát k√™ c√°c file s·∫Ω b·ªã ·∫£nh h∆∞·ªüng
        if Path("src/App.tsx").exists():
            self.actions.append(("DELETE", "src/App.tsx", "File App component m·∫∑c ƒë·ªãnh"))
        if Path("src/App.css").exists():
            self.actions.append(("DELETE", "src/App.css", "File CSS c·ªßa App m·∫∑c ƒë·ªãnh"))
        
        self.actions.append(("CREATE", "src/layouts/", "Th∆∞ m·ª•c Layouts"))
        self.actions.append(("CREATE", "src/pages/", "Th∆∞ m·ª•c Pages"))
        self.actions.append(("OVERWRITE", "src/main.tsx", "File kh·ªüi ƒë·ªông ·ª©ng d·ª•ng"))

    def display(self):
        """Hi·ªÉn th·ªã k·∫ø ho·∫°ch cho ng∆∞·ªùi d√πng xem."""
        if not self.actions:
            console.print("[green]üîç D·ª± √°n ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh. Kh√¥ng c√≥ thay ƒë·ªïi n√†o c·∫ßn th·ª±c hi·ªán.[/green]")
            return

        table = Table(title="[bold cyan]K·∫ø ho·∫°ch th·ª±c thi c·ªßa Shacnify[/bold cyan]")
        table.add_column("H√†nh ƒë·ªông", style="yellow")
        table.add_column("ƒê·ªëi t∆∞·ª£ng", style="magenta")
        table.add_column("M√¥ t·∫£", style="white")

        for action, target, description in self.actions:
            style = "green"
            if action == "OVERWRITE":
                style = "yellow"
            elif action == "DELETE":
                style = "bold red"
            table.add_row(f"[{style}]{action}[/]", target, description)
        
        console.print(table)